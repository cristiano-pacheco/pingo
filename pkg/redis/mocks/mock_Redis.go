// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	redis "github.com/redis/go-redis/v9"
)

// MockRedis is an autogenerated mock type for the Redis type
type MockRedis struct {
	mock.Mock
}

type MockRedis_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRedis) EXPECT() *MockRedis_Expecter {
	return &MockRedis_Expecter{mock: &_m.Mock}
}

// Client provides a mock function with no fields
func (_m *MockRedis) Client() *redis.Client {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Client")
	}

	var r0 *redis.Client
	if rf, ok := ret.Get(0).(func() *redis.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.Client)
		}
	}

	return r0
}

// MockRedis_Client_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Client'
type MockRedis_Client_Call struct {
	*mock.Call
}

// Client is a helper method to define mock.On call
func (_e *MockRedis_Expecter) Client() *MockRedis_Client_Call {
	return &MockRedis_Client_Call{Call: _e.mock.On("Client")}
}

func (_c *MockRedis_Client_Call) Run(run func()) *MockRedis_Client_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRedis_Client_Call) Return(_a0 *redis.Client) *MockRedis_Client_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRedis_Client_Call) RunAndReturn(run func() *redis.Client) *MockRedis_Client_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRedis creates a new instance of MockRedis. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRedis(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRedis {
	mock := &MockRedis{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
