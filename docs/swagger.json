{
    "swagger": "2.0",
    "info": {
        "description": "Pingo API",
        "title": "Pingo API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticates user credentials and send the verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate the user",
                "parameters": [
                    {
                        "description": "Login credentials (email and password)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated token",
                        "schema": {
                            "$ref": "#/definitions/response.Envelope"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/token": {
            "post": {
                "description": "Generate the JWT token for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate authentication token",
                "parameters": [
                    {
                        "description": "Login credentials (email and password)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthGenerateJWTRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated token",
                        "schema": {
                            "$ref": "#/definitions/response.Envelope"
                        }
                    },
                    "400": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/contacts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all contacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "List contacts",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved contacts",
                        "schema": {
                            "$ref": "#/definitions/response.Envelope"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Create contact",
                "parameters": [
                    {
                        "description": "Contact data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created contact",
                        "schema": {
                            "$ref": "#/definitions/response.Envelope"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "422": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/contacts/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Update contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated contact"
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "422": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing contact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully deleted contact"
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully updated user"
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "422": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/response.Envelope"
                        }
                    },
                    "422": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/users/activate": {
            "post": {
                "description": "Activates an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Activate user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ActivateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully activated user"
                    },
                    "400": {
                        "description": "Invalid request format or validation error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ActivateUserRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AuthGenerateJWTRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AuthLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.CreateContactRequest": {
            "type": "object",
            "properties": {
                "contact_data": {
                    "type": "string"
                },
                "contact_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateContactRequest": {
            "type": "object",
            "properties": {
                "contact_data": {
                    "type": "string"
                },
                "contact_type": {
                    "type": "string"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "errs.Detail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "errs.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/errs.Detail"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.Envelope": {
            "type": "object",
            "additionalProperties": {}
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter your bearer token in the format **Bearer \u003ctoken\u003e**",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}